{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05E0\\u05D9\\u05D1\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\React\\\\React App\\\\react-course\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Auxlier from '../../hoc/Auxiler';\nimport Burger from '../../components/Burger/Burger';\nimport BurgerControls from '../../components/Burger/BurgerControls/BurgerControls';\n\nclass buildBurger extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        Salad: 0,\n        Bacon: 0,\n        Cheese: 0,\n        Meat: 0\n      }\n    };\n\n    this.addIngrdient = type => {\n      let ingredientsCopy = { ...this.state.ingredients\n      };\n      ingredientsCopy[type]++;\n      console.log(ingredientsCopy);\n      this.setState({\n        ingredients: ingredientsCopy\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Auxlier, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(BurgerControls, {\n      addIngredient: this.addIngrdient('Salad'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 18\n      }\n    }));\n  }\n\n}\n\nexport default buildBurger; //\n// Some manipulation on JS arrays\n// test1 = () => {\n//     console.log(this.state.ingredients['Salad']);\n// };\n// test2 = () =>  {\n// //    let vals = [1,2,3,4,5]  \n// //    let sum = 0;\n// //    for(let v of vals) {\n// //         sum += v ;\n// //    }\n// //    return sum;\n// let vals = [1,2,3,4,5];\n// let answer = vals.reduce((acc,val) => acc + val,10 );\n//     return answer;\n// };\n// test3 = () =>  {\n//     let vals = [13,21,9,4,5]\n//     let answer = vals.reduce((a,b) => (b<a)? b : a , );\n//         console.log(answer);\n// }","map":{"version":3,"sources":["C:/Users/ניב/OneDrive/שולחן העבודה/React/React App/react-course/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Auxlier","Burger","BurgerControls","buildBurger","state","ingredients","Salad","Bacon","Cheese","Meat","addIngrdient","type","ingredientsCopy","console","log","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,cAAP,MAA2B,uDAA3B;;AAIA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAChCK,KADgC,GACxB;AACJC,MAAAA,WAAW,EAAE;AACTC,QAAAA,KAAK,EAAE,CADE;AAETC,QAAAA,KAAK,EAAE,CAFE;AAGTC,QAAAA,MAAM,EAAE,CAHC;AAITC,QAAAA,IAAI,EAAE;AAJG;AADT,KADwB;;AAAA,SAWhCC,YAXgC,GAWhBC,IAAD,IAAW;AACtB,UAAIC,eAAe,GAAG,EAAC,GAAG,KAAKR,KAAL,CAAWC;AAAf,OAAtB;AACAO,MAAAA,eAAe,CAACD,IAAD,CAAf;AAEAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,eAAZ;AACA,WAAKG,QAAL,CAAc;AAACV,QAAAA,WAAW,EAAGO;AAAf,OAAd;AAEH,KAlB+B;AAAA;;AAoBhCI,EAAAA,MAAM,GAAG;AAGL,wBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,MAAD;AACI,MAAA,WAAW,EAAE,KAAKZ,KAAL,CAAWC,WAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAKK,oBAAC,cAAD;AACG,MAAA,aAAa,EAAG,KAAKK,YAAL,CAAkB,OAAlB,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALL,CADJ;AAeH;;AAtC+B;;AA0CpC,eAAeP,WAAf,C,CAOA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\r\nimport Auxlier from '../../hoc/Auxiler';\r\nimport Burger from '../../components/Burger/Burger'\r\nimport BurgerControls from '../../components/Burger/BurgerControls/BurgerControls'\r\n\r\n\r\n\r\nclass buildBurger extends Component {\r\n    state = {\r\n        ingredients: {\r\n            Salad: 0,\r\n            Bacon: 0,\r\n            Cheese: 0,\r\n            Meat: 0,\r\n        },\r\n\r\n    };\r\n\r\n    addIngrdient = (type)  => {\r\n        let ingredientsCopy = {...this.state.ingredients}\r\n        ingredientsCopy[type] ++ ;\r\n\r\n        console.log(ingredientsCopy)\r\n        this.setState({ingredients : ingredientsCopy})\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <Auxlier>\r\n               \r\n                <Burger\r\n                    ingredients={this.state.ingredients}\r\n                />\r\n                 <BurgerControls\r\n                    addIngredient= {this.addIngrdient('Salad')}\r\n                />\r\n\r\n            \r\n            </Auxlier>\r\n\r\n        \r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default buildBurger;\r\n\r\n\r\n\r\n\r\n\r\n\r\n//\r\n\r\n// Some manipulation on JS arrays\r\n// test1 = () => {\r\n//     console.log(this.state.ingredients['Salad']);\r\n// };\r\n\r\n// test2 = () =>  {\r\n// //    let vals = [1,2,3,4,5]  \r\n// //    let sum = 0;\r\n// //    for(let v of vals) {\r\n// //         sum += v ;\r\n// //    }\r\n// //    return sum;\r\n\r\n// let vals = [1,2,3,4,5];\r\n// let answer = vals.reduce((acc,val) => acc + val,10 );\r\n//     return answer;\r\n\r\n// };\r\n\r\n// test3 = () =>  {\r\n//     let vals = [13,21,9,4,5]\r\n\r\n//     let answer = vals.reduce((a,b) => (b<a)? b : a , );\r\n//         console.log(answer);\r\n// }"]},"metadata":{},"sourceType":"module"}