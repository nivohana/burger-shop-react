{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05E0\\u05D9\\u05D1\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\React\\\\React App\\\\react-course\\\\src\\\\components\\\\Burger\\\\Burger.js\";\nimport React from 'react';\nimport BurgerIngredient from './BurgerIngridients/BurgerIngredient';\nimport styles from './Burger.module.css';\n\nconst burger = props => {\n  let ingredientsToArry = Object.keys(props.ingredients) // ['Salad','Bacon',....]\n  .map(igKey => {\n    return [...Array(props.ingredients[igKey])].map((_, i) => {\n      return /*#__PURE__*/React.createElement(BurgerIngredient, {\n        key: igKey + i,\n        type: igKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 24\n        }\n      });\n    });\n  });\n  let sumOfIngredients = Object.values(props.ingredients).reduce((a, b) => a + b, 0);\n\n  let checkIfThereIng = () => {\n    if (sumOfIngredients == 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 20\n        }\n      }, \" Please Enter Your Favorit Ingredients :)\");\n    } else {\n      return null;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Burger,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BurgerIngredient, {\n    type: 'bread-top',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), ingredientsToArry, /*#__PURE__*/React.createElement(BurgerIngredient, {\n    type: 'bread-bottom',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), checkIfThereIng());\n};\n\nexport default burger;","map":{"version":3,"sources":["C:/Users/ניב/OneDrive/שולחן העבודה/React/React App/react-course/src/components/Burger/Burger.js"],"names":["React","BurgerIngredient","styles","burger","props","ingredientsToArry","Object","keys","ingredients","map","igKey","Array","_","i","sumOfIngredients","values","reduce","a","b","checkIfThereIng","Burger"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,sCAA7B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAGA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtB,MAAIC,iBAAiB,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAK,CAACI,WAAlB,EAA+B;AAA/B,GACnBC,GADmB,CACfC,KAAK,IAAI;AACV,WAAO,CAAC,GAAGC,KAAK,CAACP,KAAK,CAACI,WAAN,CAAkBE,KAAlB,CAAD,CAAT,EAAqCD,GAArC,CAAyC,CAACG,CAAD,EAAIC,CAAJ,KAAU;AACtD,0BAAO,oBAAC,gBAAD;AAAkB,QAAA,GAAG,EAAEH,KAAK,GAAGG,CAA/B;AAAkC,QAAA,IAAI,EAAEH,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFM,CAAP;AAGH,GALmB,CAAxB;AAOA,MAAII,gBAAgB,GAAGR,MAAM,CAACS,MAAP,CAAcX,KAAK,CAACI,WAApB,EAAiCQ,MAAjC,CAAwC,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAAtD,EAAyD,CAAzD,CAAvB;;AACA,MAAIC,eAAe,GAAG,MAAM;AACxB,QAAIL,gBAAgB,IAAI,CAAxB,EAA2B;AACvB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAAP;AACH,KAFD,MAEO;AACH,aAAO,IAAP;AACH;AAEJ,GAPD;;AAcA,sBACI;AAAK,IAAA,SAAS,EAAEZ,MAAM,CAACkB,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAE,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKf,iBAFL,eAGI,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAE,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAIKc,eAAe,EAJpB,CADJ;AAQH,CA/BD;;AAiCA,eAAehB,MAAf","sourcesContent":["import React from 'react';\r\nimport BurgerIngredient from './BurgerIngridients/BurgerIngredient';\r\nimport styles from './Burger.module.css';\r\n\r\n\r\nconst burger = (props) => {\r\n    let ingredientsToArry = Object.keys(props.ingredients) // ['Salad','Bacon',....]\r\n        .map(igKey => {\r\n            return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n                return <BurgerIngredient key={igKey + i} type={igKey} />;\r\n            });\r\n        });\r\n\r\n    let sumOfIngredients = Object.values(props.ingredients).reduce((a, b) => a + b, 0);\r\n    let checkIfThereIng = () => {\r\n        if (sumOfIngredients == 0) {\r\n            return <div> Please Enter Your Favorit Ingredients :)</div>;\r\n        } else {\r\n            return null;\r\n        }\r\n\r\n    };\r\n    \r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={styles.Burger}>\r\n            <BurgerIngredient type={'bread-top'} />\r\n            {ingredientsToArry}\r\n            <BurgerIngredient type={'bread-bottom'} />\r\n            {checkIfThereIng()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default burger;"]},"metadata":{},"sourceType":"module"}