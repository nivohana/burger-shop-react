{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05E0\\u05D9\\u05D1\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\React\\\\React App\\\\react-course\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Auxlier from '../../hoc/Auxiler';\nimport Burger from '../../components/Burger/Burger';\nimport BurgerControls from '../../components/Burger/BurgerControls/BurgerControls';\nimport { object } from 'prop-types';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  bacon: 0.4,\n  cheese: 1.3,\n  meat: 0.7\n};\n\nclass buildBurger extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchasable: false\n    };\n\n    this.addIngredientHandler = type => {\n      let ingredientsUpdate = { ...this.state.ingredients\n      };\n      ingredientsUpdate[type]++;\n      console.log(ingredientsUpdate);\n      let priceAdittion = INGREDIENT_PRICES[type];\n      let newPrice = priceAdittion + this.state.totalPrice;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: ingredientsUpdate\n      });\n      this.updatePurchasable(ingredientsUpdate);\n    };\n\n    this.removeIngredientHandler = type => {\n      let ingredientsUpdate = { ...this.state.ingredients\n      };\n      ingredientsUpdate[type]--;\n\n      if (ingredientsUpdate[type] < 0) {\n        ingredientsUpdate[type] = 0;\n      }\n\n      let priceReduce = INGREDIENT_PRICES[type];\n      let newPrice = this.state.totalPrice - priceReduce;\n\n      if (newPrice < 4) {\n        newPrice = 4;\n      }\n\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: ingredientsUpdate\n      });\n      this.updatePurchasable(ingredientsUpdate);\n    };\n\n    this.updatePurchasable = ingredientsUpdate => {\n      let ingredientsCopy = { ...this.state.ingredientsUpdate\n      };\n      let sum = Object.values(ingredientsCopy).reduce((a, b) => a + b, 0);\n      this.setState({\n        purchasable: sum > 0\n      });\n    };\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    return /*#__PURE__*/React.createElement(Auxlier, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(BurgerControls, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientRemove: this.removeIngredientHandler,\n      disabled: disabledInfo,\n      price: this.state.totalPrice,\n      purchasable: this.state.purchasable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default buildBurger; //\n// Some manipulation on JS arrays\n// test1 = () => {\n//     console.log(this.state.ingredients['Salad']);\n// };\n// test2 = () =>  {\n// //    let vals = [1,2,3,4,5]  \n// //    let sum = 0;\n// //    for(let v of vals) {\n// //         sum += v ;\n// //    }\n// //    return sum;\n// let vals = [1,2,3,4,5];\n// let answer = vals.reduce((acc,val) => acc + val,10 );\n//     return answer;\n// };\n// test3 = () =>  {\n//     let vals = [13,21,9,4,5]\n//     let answer = vals.reduce((a,b) => (b<a)? b : a , );\n//         console.log(answer);\n// }","map":{"version":3,"sources":["C:/Users/ניב/OneDrive/שולחן העבודה/React/React App/react-course/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Auxlier","Burger","BurgerControls","object","INGREDIENT_PRICES","salad","bacon","cheese","meat","buildBurger","state","ingredients","totalPrice","purchasable","addIngredientHandler","type","ingredientsUpdate","console","log","priceAdittion","newPrice","setState","updatePurchasable","removeIngredientHandler","priceReduce","ingredientsCopy","sum","Object","values","reduce","a","b","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Auxlier from '../../hoc/Auxiler';\r\nimport Burger from '../../components/Burger/Burger'\r\nimport BurgerControls from '../../components/Burger/BurgerControls/BurgerControls'\r\nimport { object } from 'prop-types';\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    bacon: 0.4,\r\n    cheese: 1.3,\r\n    meat: 0.7\r\n}\r\n\r\nclass buildBurger extends Component {\r\n    state = {\r\n        ingredients: {\r\n            salad: 0,\r\n            bacon: 0,\r\n            cheese: 0,\r\n            meat: 0,\r\n        },\r\n        totalPrice: 4,\r\n        purchasable: false\r\n    };\r\n\r\n    addIngredientHandler = (type) => {\r\n        let ingredientsUpdate = { ...this.state.ingredients }\r\n        ingredientsUpdate[type]++;\r\n\r\n        console.log(ingredientsUpdate)\r\n\r\n        let priceAdittion = INGREDIENT_PRICES[type];\r\n        let newPrice = priceAdittion + this.state.totalPrice;\r\n\r\n\r\n        this.setState({ totalPrice: newPrice, ingredients: ingredientsUpdate });\r\n        this.updatePurchasable(ingredientsUpdate);\r\n    }\r\n\r\n\r\n\r\n    removeIngredientHandler = (type) => {\r\n        let ingredientsUpdate = { ...this.state.ingredients }\r\n        ingredientsUpdate[type]--;\r\n\r\n        if (ingredientsUpdate[type] < 0) {\r\n            ingredientsUpdate[type] = 0\r\n        }\r\n\r\n        let priceReduce = INGREDIENT_PRICES[type];\r\n        let newPrice = this.state.totalPrice - priceReduce;\r\n\r\n        if (newPrice < 4) {\r\n            newPrice = 4\r\n        }\r\n\r\n        this.setState({ totalPrice: newPrice, ingredients: ingredientsUpdate });\r\n        this.updatePurchasable(ingredientsUpdate);\r\n    };\r\n\r\n    updatePurchasable = (ingredientsUpdate) => {\r\n        let ingredientsCopy = { ...this.state.ingredientsUpdate }\r\n        let sum = Object.values(ingredientsCopy).reduce((a,b) => a+b ,0)\r\n        \r\n      \r\n       this.setState({purchasable: sum > 0});\r\n        \r\n        \r\n    };\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const disabledInfo = {\r\n            ...this.state.ingredients\r\n        }\r\n        for (let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <=0\r\n;        }\r\n\r\n\r\n        return (\r\n            <Auxlier>\r\n\r\n                <Burger\r\n                    ingredients={this.state.ingredients}\r\n                    \r\n                />\r\n\r\n                <BurgerControls\r\n                    ingredientAdded={this.addIngredientHandler}\r\n                    ingredientRemove={this.removeIngredientHandler}\r\n                    disabled = {disabledInfo}\r\n                    price={this.state.totalPrice}\r\n                    purchasable={this.state.purchasable}\r\n\r\n                />\r\n\r\n\r\n            </Auxlier>\r\n\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default buildBurger;\r\n\r\n\r\n\r\n\r\n\r\n\r\n//\r\n\r\n// Some manipulation on JS arrays\r\n// test1 = () => {\r\n//     console.log(this.state.ingredients['Salad']);\r\n// };\r\n\r\n// test2 = () =>  {\r\n// //    let vals = [1,2,3,4,5]  \r\n// //    let sum = 0;\r\n// //    for(let v of vals) {\r\n// //         sum += v ;\r\n// //    }\r\n// //    return sum;\r\n\r\n// let vals = [1,2,3,4,5];\r\n// let answer = vals.reduce((acc,val) => acc + val,10 );\r\n//     return answer;\r\n\r\n// };\r\n\r\n// test3 = () =>  {\r\n//     let vals = [13,21,9,4,5]\r\n\r\n//     let answer = vals.reduce((a,b) => (b<a)? b : a , );\r\n//         console.log(answer);\r\n// }"]},"metadata":{},"sourceType":"module"}